net.corda.v5.ledger.obsolete.LedgerGroupParameters:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getNotaries:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: java.util.List<net.corda.v5.ledger.obsolete.NotaryInfo>
      params: {}
  fields:
    NOTARIES_KEY:
      annotation:
        - NotNull
      type: public static final String
      initialised value: corda.notaries
net.corda.v5.ledger.obsolete.LedgerMemberInfo:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getNotaryServiceParty:
      annotations:
        - Nullable
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.identity.Party
      params: {}
  fields:
    NOTARY_SERVICE_PARTY:
      annotation:
        - NotNull
      type: public static final String
      initialised value: corda.notaryServiceParty
net.corda.v5.ledger.obsolete.NotaryInfo:
  annotations:
    - CordaSerializable
  type: public interface
  extends:
    - net.corda.v5.base.types.LayeredPropertyMap
  interface: true
  methods:
    getParty:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getPluginClass:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: String
net.corda.v5.ledger.obsolete.UniqueIdentifier:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements:
    - java.lang.Comparable
  interface: false
  methods:
    compareTo:
      annotations: []
      default: false
      type: public
      returnType: int
      params:
        other:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.UniqueIdentifier
    component1:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.UUID
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.UniqueIdentifier
      params:
        externalId:
          annotation:
            - Nullable
          type: String
        id:
          annotation:
            - NotNull
          type: java.util.UUID
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getExternalId:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    getId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.UUID
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.UniqueIdentifier$Companion
net.corda.v5.ledger.obsolete.UniqueIdentifier$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    fromString:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.UniqueIdentifier
      params:
        name:
          annotation:
            - NotNull
          type: String
net.corda.v5.ledger.obsolete.contracts.AlwaysAcceptCPKConstraint:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public final class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.contracts.CPKConstraint
  interface: false
  methods:
    isSatisfiedBy:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
        context:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CPKConstraintContext
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.contracts.AlwaysAcceptCPKConstraint
net.corda.v5.ledger.obsolete.contracts.Amount:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements:
    - java.lang.Comparable
  interface: false
  methods:
    compareTo:
      annotations: []
      default: false
      type: public
      returnType: int
      params:
        other:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.Amount<T>
    component1:
      annotations: []
      default: false
      type: public final
      returnType: long
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.math.BigDecimal
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        quantity:
          annotation: []
          type: long
        displayTokenSize:
          annotation:
            - NotNull
          type: java.math.BigDecimal
        token:
          annotation:
            - NotNull
          type: T
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    fromDecimal:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        displayQuantity:
          annotation:
            - NotNull
          type: java.math.BigDecimal
        token:
          annotation:
            - NotNull
          type: T
    getDisplayTokenSize:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: java.math.BigDecimal
      params:
        token:
          annotation:
            - NotNull
          type: Object
    getQuantity:
      annotations: []
      default: false
      type: public final
      returnType: long
    getToken:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    minus:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        other:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.Amount<T>
    parseCurrency:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<java.util.Currency>
      params:
        input:
          annotation:
            - NotNull
          type: String
    plus:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        other:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.Amount<T>
    splitEvenly:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Amount<T>>
      params:
        partitions:
          annotation: []
          type: int
    sumOrNull:
      annotations:
        - Nullable
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params: {}
    sumOrThrow:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params: {}
    sumOrZero:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        token:
          annotation:
            - NotNull
          type: T
    times:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        other:
          annotation: []
          type: int
    toDecimal:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.math.BigDecimal
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    zero:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        token:
          annotation:
            - NotNull
          type: T
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.contracts.Amount$Companion
net.corda.v5.ledger.obsolete.contracts.Amount$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    fromDecimal:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        displayQuantity:
          annotation:
            - NotNull
          type: java.math.BigDecimal
        token:
          annotation:
            - NotNull
          type: T
    getDisplayTokenSize:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.math.BigDecimal
      params:
        token:
          annotation:
            - NotNull
          type: Object
    parseCurrency:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<java.util.Currency>
      params:
        input:
          annotation:
            - NotNull
          type: String
    sumOrNull:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params: {}
    sumOrThrow:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params: {}
    sumOrZero:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        token:
          annotation:
            - NotNull
          type: T
    zero:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params:
        token:
          annotation:
            - NotNull
          type: T
net.corda.v5.ledger.obsolete.contracts.AmountTransfer:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    apply:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.List<net.corda.v5.ledger.obsolete.contracts.SourceAndAmount<T,\
        \ P>>"
      params:
        balances:
          annotation:
            - NotNull
          type: "java.util.List<? extends net.corda.v5.ledger.obsolete.contracts.SourceAndAmount<T,\
            \ ? extends P>>"
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "net.corda.v5.ledger.obsolete.contracts.AmountTransfer<T, P>"
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    fromDecimal:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "net.corda.v5.ledger.obsolete.contracts.AmountTransfer<T, P>"
      params:
        displayQuantityDelta:
          annotation:
            - NotNull
          type: java.math.BigDecimal
        token:
          annotation:
            - NotNull
          type: T
        source:
          annotation:
            - NotNull
          type: P
        destination:
          annotation:
            - NotNull
          type: P
    getDestination:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: P
    getQuantityDelta:
      annotations: []
      default: false
      type: public final
      returnType: long
    getSource:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: P
    getToken:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    novate:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.List<net.corda.v5.ledger.obsolete.contracts.AmountTransfer<T,\
        \ P>>"
      params:
        centralParty:
          annotation:
            - NotNull
          type: P
    plus:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "net.corda.v5.ledger.obsolete.contracts.AmountTransfer<T, P>"
      params:
        other:
          annotation:
            - NotNull
          type: "net.corda.v5.ledger.obsolete.contracts.AmountTransfer<T, P>"
    toDecimal:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.math.BigDecimal
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    zero:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "net.corda.v5.ledger.obsolete.contracts.AmountTransfer<T, P>"
      params:
        token:
          annotation:
            - NotNull
          type: T
        source:
          annotation:
            - NotNull
          type: P
        destination:
          annotation:
            - NotNull
          type: P
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.contracts.AmountTransfer$Companion
net.corda.v5.ledger.obsolete.contracts.AmountTransfer$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    fromDecimal:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "net.corda.v5.ledger.obsolete.contracts.AmountTransfer<T, P>"
      params:
        displayQuantityDelta:
          annotation:
            - NotNull
          type: java.math.BigDecimal
        token:
          annotation:
            - NotNull
          type: T
        source:
          annotation:
            - NotNull
          type: P
        destination:
          annotation:
            - NotNull
          type: P
    zero:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "net.corda.v5.ledger.obsolete.contracts.AmountTransfer<T, P>"
      params:
        token:
          annotation:
            - NotNull
          type: T
        source:
          annotation:
            - NotNull
          type: P
        destination:
          annotation:
            - NotNull
          type: P
net.corda.v5.ledger.obsolete.contracts.Attachment:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    extractFile:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        path:
          annotation:
            - NotNull
          type: String
        outputTo:
          annotation:
            - NotNull
          type: java.io.OutputStream
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getSignerKeys:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<java.security.PublicKey>
    getSize:
      annotations: []
      default: false
      type: public abstract
      returnType: int
    open:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.io.InputStream
    openAsJAR:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.jar.JarInputStream
net.corda.v5.ledger.obsolete.contracts.AttachmentResolutionException:
  annotations: []
  type: public final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getHash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.AutomaticPlaceholderCPKConstraint:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public final class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.contracts.CPKConstraint
  interface: false
  methods:
    isSatisfiedBy:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
        context:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CPKConstraintContext
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.contracts.AutomaticPlaceholderCPKConstraint
net.corda.v5.ledger.obsolete.contracts.BelongsToContract:
  annotations: []
  type: public @interface
  interface: false
  methods:
    value:
      annotations: []
      default: false
      type: public abstract
      returnType: Class<? extends net.corda.v5.ledger.obsolete.contracts.Contract>
net.corda.v5.ledger.obsolete.contracts.BrokenAttachmentException:
  annotations: []
  type: public final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getAttachmentId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.CPKConstraint:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    isSatisfiedBy:
      annotations: []
      default: false
      type: public abstract
      returnType: boolean
      params:
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
        context:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CPKConstraintContext
net.corda.v5.ledger.obsolete.contracts.CPKConstraintContext:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods: {}
net.corda.v5.ledger.obsolete.contracts.ClassInfo:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.ClassInfo
      params:
        bundleName:
          annotation:
            - NotNull
          type: String
        bundleVersion:
          annotation:
            - NotNull
          type: String
        classname:
          annotation:
            - NotNull
          type: String
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getBundleName:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getBundleVersion:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getClassname:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.Command:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<java.security.PublicKey>
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Command<T>
      params:
        value:
          annotation:
            - NotNull
          type: T
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getSigners:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<java.security.PublicKey>
    getValue:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.CommandAndState:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.CommandData
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.OwnableState
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.CommandAndState
      params:
        command:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CommandData
        ownableState:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.OwnableState
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getCommand:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.CommandData
    getOwnableState:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.OwnableState
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.CommandData:
  annotations:
    - CordaSerializable
  type: public interface
  extends: []
  interface: true
  methods: {}
net.corda.v5.ledger.obsolete.contracts.ComponentGroupEnum:
  annotations: []
  type: public final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.v5.ledger.obsolete.contracts.ComponentGroupEnum
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.v5.ledger.obsolete.contracts.ComponentGroupEnum[]"
net.corda.v5.ledger.obsolete.contracts.Contract:
  annotations:
    - CordaSerializable
  type: public interface
  extends: []
  interface: true
  methods:
    verify:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        tx:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.LedgerTransaction
net.corda.v5.ledger.obsolete.contracts.ContractState:
  annotations:
    - CordaSerializable
  type: public interface
  extends: []
  interface: true
  methods:
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.identity.AbstractParty>
net.corda.v5.ledger.obsolete.contracts.ContractStateData:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractStateData<T>
      params:
        data:
          annotation:
            - NotNull
          type: T
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getData:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.ContractsDSL:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    requireSingleCommand:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.contracts.Command<C>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<C>
    requireThat:
      annotations: []
      default: false
      type: public static final
      returnType: R
      params:
        body:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.v5.ledger.obsolete.contracts.Requirements,\
            \ ? extends R>"
    select:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<C>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<C>
        signers:
          annotation:
            - Nullable
          type: java.util.Collection<? extends java.security.PublicKey>
    verifyMoveCommand:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: net.corda.v5.ledger.obsolete.contracts.MoveCommand
      params:
        "null":
          annotation: []
          type: java.util.List<? extends net.corda.v5.ledger.obsolete.contracts.Command<?
            extends net.corda.v5.ledger.obsolete.contracts.CommandData>>
net.corda.v5.ledger.obsolete.contracts.ContractsKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.contracts.FungibleState:
  annotations:
    - CordaSerializable
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.contracts.ContractState
  interface: true
  methods:
    getAmount:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.identity.AbstractParty>
net.corda.v5.ledger.obsolete.contracts.Issued:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.PartyAndReference
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: P
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Issued<P>
      params:
        issuer:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.identity.PartyAndReference
        product:
          annotation:
            - NotNull
          type: P
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getIssuer:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.PartyAndReference
    getProduct:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: P
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.IssuedKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    withoutIssuer:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
      params: {}
  fields:
    MAX_ISSUER_REF_SIZE:
      annotation: []
      type: public static final int
      initialised value: 1024
net.corda.v5.ledger.obsolete.contracts.LegalProseReference:
  annotations: []
  type: public @interface
  interface: false
  methods:
    uri:
      annotations: []
      default: false
      type: public abstract
      returnType: String
net.corda.v5.ledger.obsolete.contracts.LinearPointer:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public final class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.contracts.StatePointer
  interface: false
  methods:
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getPointer:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.UniqueIdentifier
    getType:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: Class<T>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    isResolved:
      annotations: []
      default: false
      type: public
      returnType: boolean
net.corda.v5.ledger.obsolete.contracts.LinearState:
  annotations:
    - CordaSerializable
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.contracts.ContractState
  interface: true
  methods:
    getLinearId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.UniqueIdentifier
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.identity.AbstractParty>
net.corda.v5.ledger.obsolete.contracts.MoveCommand:
  annotations:
    - CordaSerializable
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.contracts.CommandData
  interface: true
  methods:
    getContract:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: Class<? extends net.corda.v5.ledger.obsolete.contracts.Contract>
net.corda.v5.ledger.obsolete.contracts.OwnableState:
  annotations:
    - CordaSerializable
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.contracts.ContractState
  interface: true
  methods:
    getOwner:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.AbstractParty
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.identity.AbstractParty>
    withNewOwner:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.contracts.CommandAndState
      params:
        newOwner:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.identity.AbstractParty
net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies
      params:
        packageId:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
        dependencyIds:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getDependencyIds:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    getPackageId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependenciesKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.contracts.ReferencedStateAndRef:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.ReferencedStateAndRef<T>
      params:
        stateAndRef:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.StateAndRef<? extends T>
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getStateAndRef:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.Requirements:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    using:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        expr:
          annotation: []
          type: boolean
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.contracts.Requirements
net.corda.v5.ledger.obsolete.contracts.SignatureCPKConstraint:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.contracts.CPKConstraint
  interface: true
  methods:
    getKey:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    isSatisfiedBy:
      annotations: []
      default: false
      type: public abstract
      returnType: boolean
      params:
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
        context:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CPKConstraintContext
net.corda.v5.ledger.obsolete.contracts.SourceAndAmount:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: P
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
    component3:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Object
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "net.corda.v5.ledger.obsolete.contracts.SourceAndAmount<T, P>"
      params:
        source:
          annotation:
            - NotNull
          type: P
        amount:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.Amount<T>
        ref:
          annotation:
            - Nullable
          type: Object
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getAmount:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Amount<T>
    getRef:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Object
    getSource:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: P
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.StateAndContract:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndContract
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
        contract:
          annotation:
            - NotNull
          type: String
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getContract:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getState:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.StateAndRef:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TransactionState<T>
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateRef
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.TransactionState<? extends
            T>
        ref:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.StateRef
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getRef:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateRef
    getState:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TransactionState<T>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    referenced:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.ReferencedStateAndRef<T>
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.StateInfo:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    component3:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Integer
    component4:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateInfo
      params:
        contract:
          annotation:
            - NotNull
          type: String
        notary:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.identity.Party
        encumbrance:
          annotation:
            - Nullable
          type: Integer
        constraint:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getConstraint:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    getContract:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getEncumbrance:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Integer
    getNotary:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.StatePointer:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    getPointer:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: Object
    getType:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: Class<T>
    isResolved:
      annotations: []
      default: false
      type: public abstract
      returnType: boolean
net.corda.v5.ledger.obsolete.contracts.StatePointersKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    linearPointer:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: net.corda.v5.ledger.obsolete.contracts.LinearPointer<T>
      params:
        "null":
          annotation: []
          type: T
    staticPointer:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: net.corda.v5.ledger.obsolete.contracts.StaticPointer<T>
      params:
        "null":
          annotation: []
          type: net.corda.v5.ledger.obsolete.contracts.StateAndRef<? extends T>
net.corda.v5.ledger.obsolete.contracts.StateRef:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    component2:
      annotations: []
      default: false
      type: public final
      returnType: int
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateRef
      params:
        txhash:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
        index:
          annotation: []
          type: int
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getIndex:
      annotations: []
      default: false
      type: public final
      returnType: int
    getTxhash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.StatesKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    filterStatesOfType:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        "null":
          annotation: []
          type: Iterable<? extends net.corda.v5.ledger.obsolete.contracts.StateAndRef<?
            extends net.corda.v5.ledger.obsolete.contracts.ContractState>>
net.corda.v5.ledger.obsolete.contracts.StaticPointer:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public final class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.contracts.StatePointer
  interface: false
  methods:
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getPointer:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateRef
    getType:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: Class<T>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    isResolved:
      annotations: []
      default: false
      type: public
      returnType: boolean
net.corda.v5.ledger.obsolete.contracts.TimeWindow:
  annotations:
    - CordaSerializable
  type: public interface
  extends: []
  interface: true
  methods:
    between:
      annotations:
        - NotNull
      default: true
      type: public static
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        fromTime:
          annotation:
            - NotNull
          type: java.time.Instant
        untilTime:
          annotation:
            - NotNull
          type: java.time.Instant
    contains:
      annotations: []
      default: false
      type: public abstract
      returnType: boolean
      params:
        instant:
          annotation:
            - NotNull
          type: java.time.Instant
    fromOnly:
      annotations:
        - NotNull
      default: true
      type: public static
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        fromTime:
          annotation:
            - NotNull
          type: java.time.Instant
    fromStartAndDuration:
      annotations:
        - NotNull
      default: true
      type: public static
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        fromTime:
          annotation:
            - NotNull
          type: java.time.Instant
        duration:
          annotation:
            - NotNull
          type: java.time.Duration
    getFromTime:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: java.time.Instant
    getLength:
      annotations:
        - Nullable
      default: true
      type: public
      returnType: java.time.Duration
    getMidpoint:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: java.time.Instant
    getUntilTime:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: java.time.Instant
    untilOnly:
      annotations:
        - NotNull
      default: true
      type: public static
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        untilTime:
          annotation:
            - NotNull
          type: java.time.Instant
    withTolerance:
      annotations:
        - NotNull
      default: true
      type: public static
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        instant:
          annotation:
            - NotNull
          type: java.time.Instant
        tolerance:
          annotation:
            - NotNull
          type: java.time.Duration
net.corda.v5.ledger.obsolete.contracts.TimeWindow$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    between:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        fromTime:
          annotation:
            - NotNull
          type: java.time.Instant
        untilTime:
          annotation:
            - NotNull
          type: java.time.Instant
    fromOnly:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        fromTime:
          annotation:
            - NotNull
          type: java.time.Instant
    fromStartAndDuration:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        fromTime:
          annotation:
            - NotNull
          type: java.time.Instant
        duration:
          annotation:
            - NotNull
          type: java.time.Duration
    untilOnly:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        untilTime:
          annotation:
            - NotNull
          type: java.time.Instant
    withTolerance:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
      params:
        instant:
          annotation:
            - NotNull
          type: java.time.Instant
        tolerance:
          annotation:
            - NotNull
          type: java.time.Duration
net.corda.v5.ledger.obsolete.contracts.TokenizableAssetInfo:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    getDisplayTokenSize:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.math.BigDecimal
net.corda.v5.ledger.obsolete.contracts.TransactionResolutionException:
  annotations: []
  type: public class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getHash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionResolutionException$UnknownParametersException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getHash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionState:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    component4:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Integer
    component5:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TransactionState<T>
      params:
        data:
          annotation:
            - NotNull
          type: T
        contract:
          annotation:
            - NotNull
          type: String
        notary:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.identity.Party
        encumbrance:
          annotation:
            - Nullable
          type: Integer
        constraint:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getConstraint:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    getContract:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getData:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
    getEncumbrance:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Integer
    getNotary:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException:
  annotations: []
  type: public abstract class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$BrokenTransactionException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$ConflictingAttachmentsRejection:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getContractClass:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$ConstraintPropagationRejection:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getContractClass:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$ContractConstraintRejection:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getContractClass:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$ContractCreationError:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getContractClass:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$ContractRejection:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getContractClass:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$Direction:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$Direction
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$Direction[]"
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$DuplicateAttachmentsRejection:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getAttachmentId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.Attachment
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$InvalidAttachmentException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getAttachmentHash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$InvalidConstraintRejection:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getContractClass:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getReason:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$MissingAttachmentRejection:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getContractClass:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$MissingGroupParametersException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$NotaryChangeInWrongTransactionType:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getOutputNotary:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    getTxNotary:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.Party
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$TransactionContractConflictException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$TransactionDuplicateEncumbranceException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$TransactionGroupParameterOrderingException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$TransactionMissingEncumbranceException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getInOut:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$Direction
    getMissing:
      annotations: []
      default: false
      type: public final
      returnType: int
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$TransactionNonMatchingEncumbranceException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$TransactionNotaryMismatchEncumbranceException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$UnsupportedClassVersionError:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$UnsupportedHashTypeException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TransactionVerificationException$UntrustedAttachmentsException:
  annotations: []
  type: public static final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: []
  interface: false
  methods:
    getIds:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.contracts.TypeOnlyCommandData:
  annotations:
    - CordaSerializable
  type: public abstract class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.contracts.CommandData
  interface: false
  methods:
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNames:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, net.corda.v5.crypto.DigestAlgorithmName>"
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNames
      params:
        names:
          annotation:
            - NotNull
          type: "java.util.Map<String, net.corda.v5.crypto.DigestAlgorithmName>"
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getMerkleTree:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
      params:
        allLeavesHashes:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        hashingService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
    getNames:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, net.corda.v5.crypto.DigestAlgorithmName>"
    hash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        bytes:
          annotation:
            - NotNull
          type: "byte[]"
        hashingService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    isAlgorithmSupported:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        hashAlgorithm:
          annotation:
            - NotNull
          type: String
    setNames:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: "java.util.Map<String, net.corda.v5.crypto.DigestAlgorithmName>"
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNamesFactory:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    create:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNames
net.corda.v5.ledger.obsolete.crypto.TransactionDigestType:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.crypto.TransactionDigestType
    TREE:
      annotation:
        - NotNull
      type: public static final String
      initialised value: TREE
    COMPONENTHASH:
      annotation:
        - NotNull
      type: public static final String
      initialised value: COMPONENTHASH
    COMPONENTNONCE:
      annotation:
        - NotNull
      type: public static final String
      initialised value: COMPONENTNONCE
    COMPONENTNONCEHASH:
      annotation:
        - NotNull
      type: public static final String
      initialised value: COMPONENTNONCEHASH
net.corda.v5.ledger.obsolete.flowservices.FlowLedger:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    waitForLedgerCommit:
      annotations:
        - Suspendable
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
      params:
        hash:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    waitForStateConsumption:
      annotations:
        - Suspendable
      default: false
      type: public abstract
      returnType: void
      params:
        stateRefs:
          annotation:
            - NotNull
          type: java.util.Set<net.corda.v5.ledger.obsolete.contracts.StateRef>
net.corda.v5.ledger.obsolete.identity.AbstractParty:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    getOwningKey:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.security.PublicKey
    nameOrNull:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.base.types.MemberX500Name
    ref:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.identity.PartyAndReference
      params:
        bytes:
          annotation:
            - NotNull
          type: "byte[]"
net.corda.v5.ledger.obsolete.identity.AnonymousParty:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.identity.AbstractParty
  interface: true
  methods:
    getOwningKey:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.security.PublicKey
    nameOrNull:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.base.types.MemberX500Name
    ref:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.identity.PartyAndReference
      params:
        bytes:
          annotation:
            - NotNull
          type: "byte[]"
net.corda.v5.ledger.obsolete.identity.IdentityService:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    anonymousPartyFromKey:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.AnonymousParty
      params:
        publicKey:
          annotation:
            - NotNull
          type: java.security.PublicKey
    externalIdForPublicKey:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: java.util.UUID
      params:
        publicKey:
          annotation:
            - NotNull
          type: java.security.PublicKey
    nameFromKey:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.base.types.MemberX500Name
      params:
        publicKey:
          annotation:
            - NotNull
          type: java.security.PublicKey
    partyFromAnonymous:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
      params:
        party:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.identity.AbstractParty
    partyFromName:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
      params:
        name:
          annotation:
            - NotNull
          type: net.corda.v5.base.types.MemberX500Name
    publicKeysForExternalId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: Iterable<java.security.PublicKey>
      params:
        externalId:
          annotation:
            - NotNull
          type: java.util.UUID
    registerKey:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        publicKey:
          annotation:
            - NotNull
          type: java.security.PublicKey
        name:
          annotation:
            - NotNull
          type: net.corda.v5.base.types.MemberX500Name
net.corda.v5.ledger.obsolete.identity.Party:
  annotations:
    - CordaSerializable
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.identity.AbstractParty
  interface: true
  methods:
    anonymise:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.AnonymousParty
    description:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: String
    getName:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.base.types.MemberX500Name
    getOwningKey:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.security.PublicKey
    nameOrNull:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.base.types.MemberX500Name
    ref:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.identity.PartyAndReference
      params:
        bytes:
          annotation:
            - NotNull
          type: "byte[]"
net.corda.v5.ledger.obsolete.identity.PartyAndReference:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.AbstractParty
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.base.types.OpaqueBytes
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.PartyAndReference
      params:
        party:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.identity.AbstractParty
        reference:
          annotation:
            - NotNull
          type: net.corda.v5.base.types.OpaqueBytes
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getParty:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.identity.AbstractParty
    getReference:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.base.types.OpaqueBytes
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.merkle.MerkleTree:
  annotations: []
  type: public abstract class
  extends: null
  implements: []
  interface: false
  methods:
    getHash:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getMerkleTree:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
      params:
        allLeavesHashes:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        nodeDigestAlgorithmName:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestAlgorithmName
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.merkle.MerkleTree$Companion
net.corda.v5.ledger.obsolete.merkle.MerkleTree$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    getMerkleTree:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
      params:
        allLeavesHashes:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        nodeDigestAlgorithmName:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestAlgorithmName
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
net.corda.v5.ledger.obsolete.merkle.MerkleTree$Leaf:
  annotations: []
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.merkle.MerkleTree
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree$Leaf
      params:
        hash:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getHash:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.crypto.SecureHash
    getMerkleTree:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
      params:
        allLeavesHashes:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        nodeDigestAlgorithmName:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestAlgorithmName
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.merkle.MerkleTree$Companion
net.corda.v5.ledger.obsolete.merkle.MerkleTree$Node:
  annotations: []
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.merkle.MerkleTree
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree$Node
      params:
        hash:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
        left:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.merkle.MerkleTree
        right:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.merkle.MerkleTree
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getHash:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.crypto.SecureHash
    getLeft:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
    getMerkleTree:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
      params:
        allLeavesHashes:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        nodeDigestAlgorithmName:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestAlgorithmName
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
    getRight:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.merkle.MerkleTree$Companion
net.corda.v5.ledger.obsolete.merkle.MerkleTreeException:
  annotations:
    - CordaSerializable
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: []
  interface: false
  methods:
    getReason:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    build:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree
      params:
        merkleRoot:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.merkle.MerkleTree
        includeHashes:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
    getRoot:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
    rootAndUsedHashes:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        node:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
        usedHashes:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
    verify:
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        merkleRootHash:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
        hashesToCheck:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$Companion
net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    build:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree
      params:
        merkleRoot:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.merkle.MerkleTree
        includeHashes:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
    rootAndUsedHashes:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
      params:
        node:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
        usedHashes:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        digestService:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.DigestService
net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree:
  annotations:
    - CordaSerializable
  type: public abstract static class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree$IncludedLeaf:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree$IncludedLeaf
      params:
        hash:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getHash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree$Leaf:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree$Leaf
      params:
        hash:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getHash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree$Node:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
    component3:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree$Node
      params:
        left:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
        right:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
        hashAlgorithm:
          annotation:
            - Nullable
          type: String
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getHashAlgorithm:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    getLeft:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
    getRight:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree$PartialTree
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.merkle.PartialMerkleTreeKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.notary.NotaryError:
  annotations:
    - CordaSerializable
  type: public abstract class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.notary.NotaryError$Companion
    NUM_STATES:
      annotation: []
      type: public static final int
      initialised value: 5
net.corda.v5.ledger.obsolete.notary.NotaryError$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.notary.NotaryError$Conflict:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.notary.NotaryError
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<net.corda.v5.ledger.obsolete.contracts.StateRef,\
        \ net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails>"
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.notary.NotaryError$Conflict
      params:
        txId:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
        consumedStates:
          annotation:
            - NotNull
          type: "java.util.Map<net.corda.v5.ledger.obsolete.contracts.StateRef, net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails>"
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getConsumedStates:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<net.corda.v5.ledger.obsolete.contracts.StateRef,\
        \ net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails>"
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.notary.NotaryError$Companion
    NUM_STATES:
      annotation: []
      type: public static final int
      initialised value: 5
net.corda.v5.ledger.obsolete.notary.NotaryError$General:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.notary.NotaryError
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Throwable
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.notary.NotaryError$General
      params:
        cause:
          annotation:
            - NotNull
          type: Throwable
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getCause:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Throwable
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.notary.NotaryError$Companion
    NUM_STATES:
      annotation: []
      type: public static final int
      initialised value: 5
net.corda.v5.ledger.obsolete.notary.NotaryError$RequestSignatureInvalid:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.notary.NotaryError
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Throwable
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.notary.NotaryError$RequestSignatureInvalid
      params:
        cause:
          annotation:
            - NotNull
          type: Throwable
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getCause:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Throwable
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.notary.NotaryError$Companion
    NUM_STATES:
      annotation: []
      type: public static final int
      initialised value: 5
net.corda.v5.ledger.obsolete.notary.NotaryError$TimeWindowInvalid:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.notary.NotaryError
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Instant
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.notary.NotaryError$TimeWindowInvalid
      params:
        currentTime:
          annotation:
            - NotNull
          type: java.time.Instant
        txTimeWindow:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.TimeWindow
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getCurrentTime:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Instant
    getTxTimeWindow:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.notary.NotaryError$Companion
    NUM_STATES:
      annotation: []
      type: public static final int
      initialised value: 5
net.corda.v5.ledger.obsolete.notary.NotaryError$TransactionInvalid:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: net.corda.v5.ledger.obsolete.notary.NotaryError
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Throwable
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.notary.NotaryError$TransactionInvalid
      params:
        cause:
          annotation:
            - NotNull
          type: Throwable
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getCause:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Throwable
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.notary.NotaryError$Companion
    NUM_STATES:
      annotation: []
      type: public static final int
      initialised value: 5
net.corda.v5.ledger.obsolete.notary.NotaryException:
  annotations: []
  type: public final class
  extends: net.corda.v5.application.flows.exceptions.FlowException
  implements: []
  interface: false
  methods:
    getError:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.notary.NotaryError
    getTxId:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.notary.NotaryService:
  annotations: []
  type: public abstract class
  extends: null
  implements:
    - net.corda.v5.serialization.SingletonSerializeAsToken
  interface: false
  methods:
    createServiceFlow:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.application.flows.ResponderFlow
      params:
        otherPartySession:
          annotation:
            - NotNull
          type: net.corda.v5.application.messaging.FlowSession
    getMemberLookup:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.application.membership.MemberLookup
    getNotaryIdentityKey:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.security.PublicKey
    getSigningService:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.application.crypto.SigningService
    getTransactionDigestAlgorithmNamesFactory:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNamesFactory
    processQuery:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.notary.NotaryService$Query$Result
      params:
        query:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.notary.NotaryService$Query$Request
    setMemberLookup:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: net.corda.v5.application.membership.MemberLookup
    setSigningService:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: net.corda.v5.application.crypto.SigningService
    setTransactionDigestAlgorithmNamesFactory:
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNamesFactory
    start:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    stop:
      annotations: []
      default: false
      type: public abstract
      returnType: void
  fields:
    memberLookup:
      annotation:
        - CordaInject
      type: public net.corda.v5.application.membership.MemberLookup
    signingService:
      annotation:
        - CordaInject
      type: public net.corda.v5.application.crypto.SigningService
    transactionDigestAlgorithmNamesFactory:
      annotation:
        - CordaInject
      type: public net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNamesFactory
net.corda.v5.ledger.obsolete.notary.NotaryService$Query:
  annotations: []
  type: public static interface
  extends: []
  interface: true
  methods: {}
net.corda.v5.ledger.obsolete.notary.NotaryService$Query$Request:
  annotations: []
  type: public static interface
  extends: []
  interface: true
  methods: {}
net.corda.v5.ledger.obsolete.notary.NotaryService$Query$Result:
  annotations: []
  type: public static interface
  extends: []
  interface: true
  methods: {}
net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails$ConsumedStateType
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails
      params:
        hashOfTransactionId:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
        type:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails$ConsumedStateType
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getHashOfTransactionId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    getType:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails$ConsumedStateType
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails$ConsumedStateType:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails$ConsumedStateType
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.v5.ledger.obsolete.notary.StateConsumptionDetails$ConsumedStateType[]"
net.corda.v5.ledger.obsolete.schemas.DirectStatePersistable:
  annotations: []
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.schemas.StatePersistable
  interface: true
  methods:
    getStateRef:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
net.corda.v5.ledger.obsolete.schemas.IndirectStatePersistable:
  annotations: []
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.schemas.StatePersistable
  interface: true
  methods:
    getCompositeKey:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: T
net.corda.v5.ledger.obsolete.schemas.PersistentState:
  annotations:
    - MappedSuperclass
    - CordaSerializable
  type: public class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.schemas.DirectStatePersistable
  interface: false
  methods:
    getStateRef:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
    setStateRef:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
net.corda.v5.ledger.obsolete.schemas.PersistentStateRef:
  annotations:
    - Embeddable
    - Immutable
  type: public class
  extends: null
  implements:
    - java.io.Serializable
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component2:
      annotations: []
      default: false
      type: public final
      returnType: int
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
      params:
        txId:
          annotation:
            - NotNull
          type: String
        index:
          annotation: []
          type: int
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getIndex:
      annotations: []
      default: false
      type: public
      returnType: int
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    setIndex:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: int
    setTxId:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.schemas.QueryableState:
  annotations:
    - CordaSerializable
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.contracts.ContractState
  interface: true
  methods:
    generateMappedObject:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.schemas.PersistentState
      params:
        schema:
          annotation:
            - NotNull
          type: net.corda.v5.persistence.MappedSchema
    getParticipants:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.identity.AbstractParty>
    supportedSchemas:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: Iterable<net.corda.v5.persistence.MappedSchema>
net.corda.v5.ledger.obsolete.schemas.StatePersistable:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods: {}
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchema:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.schemas.vault.VaultSchema
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    MAX_CONSTRAINT_DATA_SIZE:
      annotation: []
      type: public static final int
      initialised value: 20000
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1:
  annotations:
    - CordaSerializable
  type: public final class
  extends: net.corda.v5.persistence.MappedSchema
  implements: []
  interface: false
  methods:
    getMigrationResource:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$ConstraintInfo:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$ConstraintInfo
      params:
        constraint:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    data:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: "byte[]"
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getConstraint:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    type:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$ConstraintInfo$Type
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$ConstraintInfo$Type:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$ConstraintInfo$Type
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$ConstraintInfo$Type[]"
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$DbVaultStateEvent:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: null
  implements: []
  interface: false
  methods:
    getEventType:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$DbVaultStateEvent$DbVaultEventType
    getOutputIndex:
      annotations: []
      default: false
      type: public
      returnType: int
    getSeqNo:
      annotations: []
      default: false
      type: public
      returnType: long
    getTimestamp:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Instant
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    setSeqNo:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: long
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$DbVaultStateEvent$DbVaultEventType:
  annotations: []
  type: public static final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$DbVaultStateEvent$DbVaultEventType
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$DbVaultStateEvent$DbVaultEventType[]"
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$PersistentParty:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.schemas.IndirectStatePersistable
  interface: false
  methods:
    getCompositeKey:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$PersistentStateRefAndKey
    getX500Name:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.identity.AbstractParty
    setX500Name:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.v5.ledger.obsolete.identity.AbstractParty
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$PersistentStateRefAndKey:
  annotations:
    - Embeddable
    - Immutable
  type: public static class
  extends: null
  implements:
    - java.io.Serializable
    - net.corda.v5.ledger.obsolete.schemas.DirectStatePersistable
  interface: false
  methods:
    component1:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
    component2:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$PersistentStateRefAndKey
      params:
        stateRef:
          annotation:
            - Nullable
          type: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
        publicKeyHash:
          annotation:
            - Nullable
          type: String
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getPublicKeyHash:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    getStateRef:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    setPublicKeyHash:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
    setStateRef:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$SequentialStateEventView:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations: []
      default: false
      type: public final
      returnType: long
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component3:
      annotations: []
      default: false
      type: public final
      returnType: int
    component4:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component5:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Instant
    component6:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$DbVaultStateEvent$DbVaultEventType
    component7:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.base.types.MemberX500Name
    component8:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus
    component9:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.StateStatus
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$SequentialStateEventView
      params:
        sequenceNumber:
          annotation: []
          type: long
        txId:
          annotation:
            - NotNull
          type: String
        outputIndex:
          annotation: []
          type: int
        contractStateClassName:
          annotation:
            - NotNull
          type: String
        eventTimestamp:
          annotation:
            - NotNull
          type: java.time.Instant
        eventType:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$DbVaultStateEvent$DbVaultEventType
        notary:
          annotation:
            - NotNull
          type: net.corda.v5.base.types.MemberX500Name
        relevancyStatus:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus
        stateStatus:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.services.vault.StateStatus
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getContractStateClassName:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getEventTimestamp:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Instant
    getEventType:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$DbVaultStateEvent$DbVaultEventType
    getNotary:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.base.types.MemberX500Name
    getOutputIndex:
      annotations: []
      default: false
      type: public final
      returnType: int
    getRelevancyStatus:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus
    getSequenceNumber:
      annotations: []
      default: false
      type: public final
      returnType: long
    getStateStatus:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.StateStatus
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$StateToExternalId:
  annotations:
    - Entity
    - Table
    - Immutable
  type: public static class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.schemas.IndirectStatePersistable
  interface: false
  methods:
    getCompositeKey:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$PersistentStateRefAndKey
    getExternalId:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.UUID
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$VaultFungibleState:
  annotations:
    - Entity
    - Table
    - CordaSerializable
  type: public static class
  extends: net.corda.v5.ledger.obsolete.schemas.StatePersistable
  implements: []
  interface: false
  methods:
    getQuantity:
      annotations: []
      default: false
      type: public
      returnType: long
    getStateRef:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
    setQuantity:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: long
    setStateRef:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$VaultLinearState:
  annotations:
    - Entity
    - Table
    - CordaSerializable
  type: public static class
  extends: net.corda.v5.ledger.obsolete.schemas.StatePersistable
  implements: []
  interface: false
  methods:
    getExternalId:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    getStateRef:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
    getUuid:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.UUID
    setExternalId:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
    setStateRef:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
    setUuid:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: java.util.UUID
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$VaultState:
  annotations:
    - Entity
    - Table
    - CordaSerializable
  type: public static class
  extends: net.corda.v5.ledger.obsolete.schemas.StatePersistable
  implements: []
  interface: false
  methods:
    getConstraintData:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: "byte[]"
    getConstraintType:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$ConstraintInfo$Type
    getConsumedTime:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: java.time.Instant
    getContractStateClassName:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getLockId:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    getLockUpdateTime:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: java.time.Instant
    getNotary:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getRecordedTime:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Instant
    getRelevancyStatus:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus
    getStateRef:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
    getStateStatus:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.v5.ledger.obsolete.services.vault.StateStatus
    setConstraintData:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: "byte[]"
    setConstraintType:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$ConstraintInfo$Type
    setConsumedTime:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: java.time.Instant
    setContractStateClassName:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setLockId:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
    setLockUpdateTime:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: java.time.Instant
    setNotary:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.identity.Party
    setRecordedTime:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: java.time.Instant
    setRelevancyStatus:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus
    setStateRef:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.v5.ledger.obsolete.schemas.PersistentStateRef
    setStateStatus:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.services.vault.StateStatus
net.corda.v5.ledger.obsolete.schemas.vault.VaultSchemaV1$VaultTxnNote:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: null
  implements: []
  interface: false
  methods:
    getNote:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    getSeqNo:
      annotations: []
      default: false
      type: public
      returnType: int
    getTxId:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    setNote:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
    setSeqNo:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: int
    setTxId:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
net.corda.v5.ledger.obsolete.serialization.MissingAttachmentsException:
  annotations:
    - CordaSerializable
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: []
  interface: false
  methods:
    getIds:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
net.corda.v5.ledger.obsolete.services.AttachmentStorage:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    hasAttachment:
      annotations: []
      default: false
      type: public abstract
      returnType: boolean
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    importAttachment:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
        uploader:
          annotation:
            - NotNull
          type: String
        filename:
          annotation:
            - Nullable
          type: String
    openAttachment:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.contracts.Attachment
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.services.AttachmentStorageKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.services.DuplicateAttachmentException:
  annotations: []
  type: public final class
  extends: java.nio.file.FileAlreadyExistsException
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.services.NotaryLookupService:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    getNotaryServices:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.NotaryInfo>
    isNotary:
      annotations: []
      default: false
      type: public abstract
      returnType: boolean
      params:
        party:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.identity.Party
    lookup:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.NotaryInfo
      params:
        publicKey:
          annotation:
            - NotNull
          type: java.security.PublicKey
net.corda.v5.ledger.obsolete.services.StateLoaderService:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    load:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        pointer:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.LinearPointer<T>
        ltx:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.LedgerTransaction
    loadOrdered:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
      params:
        stateRefs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
net.corda.v5.ledger.obsolete.services.StatesToRecord:
  annotations: []
  type: public final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.v5.ledger.obsolete.services.StatesToRecord
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.v5.ledger.obsolete.services.StatesToRecord[]"
net.corda.v5.ledger.obsolete.services.TransactionMappingService:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    toLedgerTransaction:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.LedgerTransaction
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.WireTransaction
net.corda.v5.ledger.obsolete.services.TransactionService:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.services.TransactionMappingService
    - net.corda.v5.ledger.obsolete.services.TransactionStorage
    - net.corda.v5.ledger.obsolete.services.TransactionVerificationService
  interface: true
  methods:
    addNote:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        txId:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
        noteText:
          annotation:
            - NotNull
          type: String
    createSignature:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.application.crypto.DigitalSignatureAndMetadata
      params:
        filteredTransaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.FilteredTransaction
    getNotes:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: Iterable<String>
      params:
        txId:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    getTransaction:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    record:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        transactions:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.v5.ledger.obsolete.transactions.SignedTransaction>
    sign:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
      params:
        signedTransaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
    toLedgerTransaction:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.LedgerTransaction
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.WireTransaction
    verify:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
    verifyRequiredSignatures:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.TransactionWithSignatures
    verifySignaturesExcept:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.TransactionWithSignatures
        allowedToBeMissing:
          annotation:
            - NotNull
          type: java.util.Collection<? extends java.security.PublicKey>
net.corda.v5.ledger.obsolete.services.TransactionStorage:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    getTransaction:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
net.corda.v5.ledger.obsolete.services.TransactionVerificationService:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    verify:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
    verifyRequiredSignatures:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.TransactionWithSignatures
    verifySignaturesExcept:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.TransactionWithSignatures
        allowedToBeMissing:
          annotation:
            - NotNull
          type: java.util.Collection<? extends java.security.PublicKey>
net.corda.v5.ledger.obsolete.services.vault.GenericQueryPostProcessor:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    getAvailableForRPC:
      annotations: []
      default: true
      type: public
      returnType: boolean
    getName:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: String
    postProcess:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.stream.Stream<R>
      params:
        inputs:
          annotation:
            - NotNull
          type: java.util.stream.Stream<I>
net.corda.v5.ledger.obsolete.services.vault.IdentityContractStatePostProcessor:
  annotations:
    - DoNotImplement
  type: public final class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.services.vault.StateAndRefPostProcessor
  interface: false
  methods:
    getAvailableForRPC:
      annotations: []
      default: false
      type: public
      returnType: boolean
    getName:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    postProcess:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.stream.Stream<net.corda.v5.ledger.obsolete.contracts.ContractState>
      params:
        inputs:
          annotation:
            - NotNull
          type: java.util.stream.Stream<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.services.vault.IdentityContractStatePostProcessor$Companion
    POST_PROCESSOR_NAME:
      annotation:
        - NotNull
      type: public static final String
      initialised value: Corda.IdentityContractStatePostProcessor
net.corda.v5.ledger.obsolete.services.vault.IdentityContractStatePostProcessor$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.services.vault.IdentityStateAndRefPostProcessor:
  annotations:
    - DoNotImplement
  type: public final class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.services.vault.StateAndRefPostProcessor
  interface: false
  methods:
    getAvailableForRPC:
      annotations: []
      default: false
      type: public
      returnType: boolean
    getName:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    postProcess:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.stream.Stream<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
      params:
        inputs:
          annotation:
            - NotNull
          type: java.util.stream.Stream<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.services.vault.IdentityStateAndRefPostProcessor$Companion
    POST_PROCESSOR_NAME:
      annotation:
        - NotNull
      type: public static final String
      initialised value: Corda.IdentityStateAndRefPostProcessor
net.corda.v5.ledger.obsolete.services.vault.IdentityStateAndRefPostProcessor$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.services.vault.NamedQueryFilter:
  annotations:
    - CordaSerializable
  type: public interface
  extends: []
  interface: true
  methods: {}
net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus:
  annotations:
    - CordaSerializable
  type: public final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus[]"
net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements:
    - net.corda.v5.ledger.obsolete.services.vault.NamedQueryFilter
  interface: false
  methods:
    component1:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<String>
    component2:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.time.Instant
    component3:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.time.Instant
    component4:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<net.corda.v5.ledger.obsolete.services.vault.VaultEventType>
    component5:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<String>
    component6:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus>
    component7:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<net.corda.v5.ledger.obsolete.services.vault.StateStatus>
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter
      params:
        txIds:
          annotation:
            - Nullable
          type: java.util.Set<String>
        startTimestamp:
          annotation:
            - Nullable
          type: java.time.Instant
        endTimestamp:
          annotation:
            - Nullable
          type: java.time.Instant
        eventTypes:
          annotation:
            - Nullable
          type: java.util.Set<? extends net.corda.v5.ledger.obsolete.services.vault.VaultEventType>
        contractStateClassNames:
          annotation:
            - Nullable
          type: java.util.Set<String>
        relevancyStatuses:
          annotation:
            - Nullable
          type: java.util.Set<? extends net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus>
        stateStatuses:
          annotation:
            - Nullable
          type: java.util.Set<? extends net.corda.v5.ledger.obsolete.services.vault.StateStatus>
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getContractStateClassNames:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<String>
    getEndTimestamp:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.time.Instant
    getEventTypes:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<net.corda.v5.ledger.obsolete.services.vault.VaultEventType>
    getRelevancyStatuses:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus>
    getStartTimestamp:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.time.Instant
    getStateStatuses:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<net.corda.v5.ledger.obsolete.services.vault.StateStatus>
    getTxIds:
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Set<String>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter$Builder:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    build:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter
    withContractStateClassNames:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter$Builder
      params:
        contractStateClassNames:
          annotation:
            - NotNull
          type: java.util.Set<String>
    withEndTimestamp:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter$Builder
      params:
        endTimestamp:
          annotation:
            - NotNull
          type: java.time.Instant
    withEventTypes:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter$Builder
      params:
        eventTypes:
          annotation:
            - NotNull
          type: java.util.Set<? extends net.corda.v5.ledger.obsolete.services.vault.VaultEventType>
    withRelevancyStatuses:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter$Builder
      params:
        relevancyStatuses:
          annotation:
            - NotNull
          type: java.util.Set<? extends net.corda.v5.ledger.obsolete.services.vault.RelevancyStatus>
    withStartTimestamp:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter$Builder
      params:
        startTimestamp:
          annotation:
            - NotNull
          type: java.time.Instant
    withStateStatuses:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter$Builder
      params:
        stateStatuses:
          annotation:
            - NotNull
          type: java.util.Set<? extends net.corda.v5.ledger.obsolete.services.vault.StateStatus>
    withTxIds:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.services.vault.SetBasedVaultQueryFilter$Builder
      params:
        txIds:
          annotation:
            - NotNull
          type: java.util.Set<String>
net.corda.v5.ledger.obsolete.services.vault.StateAndRefPostProcessor:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.services.vault.GenericQueryPostProcessor
  interface: true
  methods:
    getAvailableForRPC:
      annotations: []
      default: true
      type: public
      returnType: boolean
    getName:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: String
    postProcess:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.stream.Stream<R>
      params:
        inputs:
          annotation:
            - NotNull
          type: java.util.stream.Stream<I>
net.corda.v5.ledger.obsolete.services.vault.StateStatus:
  annotations:
    - CordaSerializable
  type: public final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.v5.ledger.obsolete.services.vault.StateStatus
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.v5.ledger.obsolete.services.vault.StateStatus[]"
net.corda.v5.ledger.obsolete.services.vault.VaultEventType:
  annotations:
    - CordaSerializable
  type: public final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    valueOf:
      annotations: []
      default: false
      type: public static
      returnType: net.corda.v5.ledger.obsolete.services.vault.VaultEventType
      params:
        value:
          annotation: []
          type: String
    values:
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.v5.ledger.obsolete.services.vault.VaultEventType[]"
net.corda.v5.ledger.obsolete.transactions.BaseTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    asContractState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        output:
          annotation:
            - Nullable
          type: Object
    checkBaseInvariants:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    filterOutRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    getCommandsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<?>
    getInputsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getOutputStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<?>
    getOutputsData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateInfo>
    getPackages:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies>
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<?>
    getReferencesMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getTransactionParameters:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.List<kotlin.Pair<String, String>>"
    outRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
    outRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
net.corda.v5.ledger.obsolete.transactions.BaseTransactionKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    filterOutRefs:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    filterOutputs:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<T>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    findOutRef:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    findOutput:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: T
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    outRefsOfType:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        "null":
          annotation: []
          type: net.corda.v5.ledger.obsolete.transactions.BaseTransaction
    outputsOfType:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<T>
      params:
        "null":
          annotation: []
          type: net.corda.v5.ledger.obsolete.transactions.BaseTransaction
net.corda.v5.ledger.obsolete.transactions.ComponentGroup:
  annotations:
    - CordaSerializable
  type: public class
  extends: null
  implements: []
  interface: false
  methods:
    getComponents:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.v5.base.types.OpaqueBytes>
    getGroupIndex:
      annotations: []
      default: false
      type: public
      returnType: int
net.corda.v5.ledger.obsolete.transactions.ComponentVisibilityException:
  annotations:
    - CordaSerializable
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: []
  interface: false
  methods:
    getId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    getReason:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
net.corda.v5.ledger.obsolete.transactions.CoreTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.transactions.BaseTransaction
  interface: true
  methods:
    asContractState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        output:
          annotation:
            - Nullable
          type: Object
    checkBaseInvariants:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    filterOutRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    getCommandsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getInputsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getMembershipParametersHash:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getOutputStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractStateData<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getOutputsData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateInfo>
    getPackages:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies>
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getReferencesMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getTransactionParameters:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.List<kotlin.Pair<String, String>>"
    outRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
    outRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
net.corda.v5.ledger.obsolete.transactions.FilteredComponentGroup:
  annotations:
    - CordaSerializable
  type: public final class
  extends: net.corda.v5.ledger.obsolete.transactions.ComponentGroup
  implements: []
  interface: false
  methods:
    component1:
      annotations: []
      default: false
      type: public final
      returnType: int
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.base.types.OpaqueBytes>
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    component4:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.transactions.FilteredComponentGroup
      params:
        groupIndex:
          annotation: []
          type: int
        components:
          annotation:
            - NotNull
          type: java.util.List<? extends net.corda.v5.base.types.OpaqueBytes>
        nonces:
          annotation:
            - NotNull
          type: java.util.List<net.corda.v5.crypto.SecureHash>
        partialMerkleTree:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getComponents:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.v5.base.types.OpaqueBytes>
    getGroupIndex:
      annotations: []
      default: false
      type: public
      returnType: int
    getNonces:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    getPartialMerkleTree:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.merkle.PartialMerkleTree
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.transactions.FilteredTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.transactions.TraversableTransaction
  interface: true
  methods:
    asContractState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        output:
          annotation:
            - Nullable
          type: Object
    checkAllComponentsVisible:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        componentGroupEnum:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ComponentGroupEnum
    checkBaseInvariants:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    checkCommandVisibility:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        publicKey:
          annotation:
            - NotNull
          type: java.security.PublicKey
    checkWithFun:
      annotations: []
      default: false
      type: public abstract
      returnType: boolean
      params:
        checkingFun:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<Object, Boolean>"
    filterOutRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    getAttachments:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    getAvailableComponentGroups:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<java.util.List<Object>>
    getCommands:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<?>>
    getCommandsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getComponentGroups:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.transactions.ComponentGroup>
    getFilteredComponentGroups:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.transactions.FilteredComponentGroup>
    getGroupHashes:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getInputsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getMembershipParametersHash:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getOutputStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractStateData<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getOutputsData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateInfo>
    getPackages:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies>
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getReferencesMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getTimeWindow:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
    getTransactionDigestAlgorithmNames:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNames
    getTransactionParameters:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.List<kotlin.Pair<String, String>>"
    outRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
    outRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    verify:
      annotations: []
      default: false
      type: public abstract
      returnType: void
net.corda.v5.ledger.obsolete.transactions.FilteredTransactionVerificationException:
  annotations:
    - CordaSerializable
  type: public final class
  extends: net.corda.v5.base.exceptions.CordaRuntimeException
  implements: []
  interface: false
  methods:
    getId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    getReason:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
net.corda.v5.ledger.obsolete.transactions.FullTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.transactions.BaseTransaction
  interface: true
  methods:
    asContractState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        output:
          annotation:
            - Nullable
          type: Object
    checkBaseInvariants:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    filterOutRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    getCommandsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getInputsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getMembershipParameters:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.membership.GroupParameters
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getOutputStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.TransactionState<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getOutputsData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateInfo>
    getPackages:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies>
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getReferencesMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getTransactionParameters:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.List<kotlin.Pair<String, String>>"
    outRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
    outRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
net.corda.v5.ledger.obsolete.transactions.GroupParametersHash:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.transactions.GroupParametersHash
      params:
        hash:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getHash:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.transactions.LedgerTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.transactions.FullTransaction
  interface: true
  methods:
    asContractState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        output:
          annotation:
            - Nullable
          type: Object
    checkBaseInvariants:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    commandsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    component1:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    component10:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    component2:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.TransactionState<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    component3:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<net.corda.v5.ledger.obsolete.contracts.CommandData>>
    component4:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Attachment>
    component5:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    component6:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    component7:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
    component8:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.PrivacySalt
    component9:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.membership.GroupParameters
    filterCommands:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterInRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterInputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterReferenceInputRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterReferenceInputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findCommand:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.Command<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findInRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findInput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findReference:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findReferenceInputRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    getAttachment:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.Attachment
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    getAttachments:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Attachment>
    getCommand:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.Command<T>
      params:
        index:
          annotation: []
          type: int
    getCommands:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<net.corda.v5.ledger.obsolete.contracts.CommandData>>
    getCommandsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getInputStates:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getInputsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getMembershipParameters:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.membership.GroupParameters
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getOutputStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.TransactionState<?>>
    getOutputsData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateInfo>
    getPackages:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies>
    getReferenceInput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getReferenceStates:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getReferencesMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getTimeWindow:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
    getTransactionParameters:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.List<kotlin.Pair<String, String>>"
    groupStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: "java.util.List<net.corda.v5.ledger.obsolete.transactions.LedgerTransaction$InOutGroup<T,\
        \ K>>"
      params:
        ofType:
          annotation:
            - NotNull
          type: Class<T>
        selector:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super T, ? extends K>"
    inRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        index:
          annotation: []
          type: int
    inRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    inputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
    outRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    referenceInputRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    referenceInputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    verify:
      annotations: []
      default: false
      type: public abstract
      returnType: void
net.corda.v5.ledger.obsolete.transactions.LedgerTransaction$InOutGroup:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<T>
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<T>
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: K
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "net.corda.v5.ledger.obsolete.transactions.LedgerTransaction$InOutGroup<T,\
        \ K>"
      params:
        inputs:
          annotation:
            - NotNull
          type: java.util.List<? extends T>
        outputs:
          annotation:
            - NotNull
          type: java.util.List<? extends T>
        groupingKey:
          annotation:
            - NotNull
          type: K
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getGroupingKey:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: K
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<T>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<T>
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.transactions.LedgerTransactionKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    commandsOfType:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<T>>
      params:
        "null":
          annotation: []
          type: net.corda.v5.ledger.obsolete.transactions.LedgerTransaction
    filterCommands:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<T>>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    filterInRefs:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    filterInputs:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<T>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    filterReferenceInputRefs:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    filterReferenceInputs:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<T>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    findCommand:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: net.corda.v5.ledger.obsolete.contracts.Command<T>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    findInRef:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    findInput:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: T
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    findReferenceInputRef:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    groupStates:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: "java.util.List<net.corda.v5.ledger.obsolete.transactions.LedgerTransaction$InOutGroup<T,\
        \ K>>"
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, ? extends K>"
    inRefsOfType:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        "null":
          annotation: []
          type: net.corda.v5.ledger.obsolete.transactions.LedgerTransaction
    indReference:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: T
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super T, Boolean>"
    inputsOfType:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<T>
      params:
        "null":
          annotation: []
          type: net.corda.v5.ledger.obsolete.transactions.LedgerTransaction
    referenceInputRefsOfType:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        "null":
          annotation: []
          type: net.corda.v5.ledger.obsolete.transactions.LedgerTransaction
    referenceInputsOfType:
      annotations: []
      default: false
      type: public static final synthetic
      returnType: java.util.List<T>
      params:
        "null":
          annotation: []
          type: net.corda.v5.ledger.obsolete.transactions.LedgerTransaction
net.corda.v5.ledger.obsolete.transactions.NotaryChangeLedgerTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.transactions.FullTransaction
    - net.corda.v5.ledger.obsolete.transactions.TransactionWithSignatures
  interface: true
  methods:
    asContractState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        output:
          annotation:
            - Nullable
          type: Object
    checkBaseInvariants:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    component1:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    component2:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    component3:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    component4:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    component5:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.application.crypto.DigitalSignatureAndMetadata>
    component6:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.membership.GroupParameters
    filterOutRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    getCommandsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getInputsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getKeyDescriptions:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<String>
      params:
        keys:
          annotation:
            - NotNull
          type: java.util.Set<? extends java.security.PublicKey>
    getMembershipParameters:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.membership.GroupParameters
    getMissingSigningKeys:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.Set<java.security.PublicKey>
    getNewNotary:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getOutputStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.TransactionState<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getOutputsData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateInfo>
    getPackages:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies>
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getReferencesMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getRequiredSigningKeys:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.Set<java.security.PublicKey>
    getSigs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.application.crypto.DigitalSignatureAndMetadata>
    getTransactionParameters:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.List<kotlin.Pair<String, String>>"
    outRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
    outRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
net.corda.v5.ledger.obsolete.transactions.NotaryChangeWireTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.transactions.CoreTransaction
  interface: true
  methods:
    asContractState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        output:
          annotation:
            - Nullable
          type: Object
    checkBaseInvariants:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    filterOutRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    getCommandsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getInputsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getMembershipParametersHash:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getNewNotary:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getOutputStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractStateData<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getOutputsData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateInfo>
    getPackages:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies>
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getReferencesMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getSerializedComponents:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.base.types.OpaqueBytes>
    getTransactionDigestAlgorithmNames:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNames
    getTransactionParameters:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.List<kotlin.Pair<String, String>>"
    outRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
    outRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
net.corda.v5.ledger.obsolete.transactions.PrivacySalt:
  annotations:
    - CordaSerializable
  type: public final class
  extends: net.corda.v5.base.types.OpaqueBytes
  implements: []
  interface: false
  methods: {}
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.v5.ledger.obsolete.transactions.PrivacySalt$Companion
net.corda.v5.ledger.obsolete.transactions.PrivacySalt$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.v5.ledger.obsolete.transactions.ReferenceStateRef:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateRef
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.transactions.ReferenceStateRef
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.StateRef
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getStateRef:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.contracts.StateRef
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.transactions.SignaturesMissingException:
  annotations: []
  type: public final class
  extends: java.security.SignatureException
  implements:
    - net.corda.v5.base.exceptions.CordaThrowable
  interface: false
  methods:
    addSuppressed:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        suppressed:
          annotation:
            - NotNull
          type: "Throwable[]"
    getDescriptions:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<String>
    getId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.crypto.SecureHash
    getMissing:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Set<java.security.PublicKey>
    getOriginalExceptionClassName:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    getOriginalMessage:
      annotations:
        - Nullable
      default: false
      type: public
      returnType: String
    setCause:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        cause:
          annotation:
            - Nullable
          type: Throwable
    setMessage:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        message:
          annotation:
            - Nullable
          type: String
    setOriginalExceptionClassName:
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
net.corda.v5.ledger.obsolete.transactions.SignedTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.transactions.TransactionWithSignatures
  interface: true
  methods:
    buildFilteredTransaction:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.FilteredTransaction
      params:
        filtering:
          annotation:
            - NotNull
          type: java.util.function.Predicate<Object>
    getCoreTransaction:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.CoreTransaction
    getGroupParametersHash:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getKeyDescriptions:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<String>
      params:
        keys:
          annotation:
            - NotNull
          type: java.util.Set<? extends java.security.PublicKey>
    getMissingSigningKeys:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.Set<java.security.PublicKey>
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getRequiredSigningKeys:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.Set<java.security.PublicKey>
    getSigs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.application.crypto.DigitalSignatureAndMetadata>
    getTx:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.WireTransaction
    getTxBits:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.serialization.SerializedBytes<net.corda.v5.ledger.obsolete.transactions.CoreTransaction>
    plus:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
      params:
        sigList:
          annotation:
            - NotNull
          type: java.util.Collection<net.corda.v5.application.crypto.DigitalSignatureAndMetadata>
    withAdditionalSignature:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
      params:
        sig:
          annotation:
            - NotNull
          type: net.corda.v5.application.crypto.DigitalSignatureAndMetadata
    withAdditionalSignatures:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
      params:
        sigList:
          annotation:
            - NotNull
          type: Iterable<net.corda.v5.application.crypto.DigitalSignatureAndMetadata>
net.corda.v5.ledger.obsolete.transactions.SignedTransactionDigest:
  annotations:
    - CordaSerializable
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component2:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<String>
    component3:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<String>
    copy:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.v5.ledger.obsolete.transactions.SignedTransactionDigest
      params:
        txId:
          annotation:
            - NotNull
          type: String
        outputStates:
          annotation:
            - NotNull
          type: java.util.List<String>
        signatures:
          annotation:
            - NotNull
          type: java.util.List<String>
    equals:
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getOutputStates:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<String>
    getSignatures:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<String>
    getTxId:
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    hashCode:
      annotations: []
      default: false
      type: public
      returnType: int
    toString:
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.v5.ledger.obsolete.transactions.TransactionBuilder:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    addAttachment:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.v5.crypto.SecureHash
    addCommand:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
      params:
        data:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CommandData
        keys:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
    addInputState:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
      params:
        stateAndRef:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.StateAndRef<?>
    addOutputState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
        constraint:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.CPKConstraint
    addReferenceState:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
      params:
        referencedStateAndRef:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ReferencedStateAndRef<?>
    copy:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
    getAttachments:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    getCommands:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<?>>
    getInputStates:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getLockId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.UUID
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutputStates:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.TransactionState<?>>
    getReferenceStates:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    setNotary:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
      params:
        notary:
          annotation:
            - Nullable
          type: net.corda.v5.ledger.obsolete.identity.Party
    setPrivacySalt:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
      params:
        privacySalt:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.PrivacySalt
    setTimeWindow:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
      params:
        time:
          annotation:
            - NotNull
          type: java.time.Instant
        timeTolerance:
          annotation:
            - NotNull
          type: java.time.Duration
    sign:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.SignedTransaction
    toWireTransaction:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.WireTransaction
    verify:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    withItems:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
      params:
        items:
          annotation:
            - NotNull
          type: "Object[]"
net.corda.v5.ledger.obsolete.transactions.TransactionBuilderFactory:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    create:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.TransactionBuilder
net.corda.v5.ledger.obsolete.transactions.TransactionInvariants:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    checkBaseTransactionInvariants:
      annotations: []
      default: false
      type: public static final
      returnType: void
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.BaseTransaction
    checkFullTransactionInvariants:
      annotations: []
      default: false
      type: public static final
      returnType: void
      params:
        transaction:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.transactions.FullTransaction
    checkNotaryWhitelisted:
      annotations: []
      default: false
      type: public static final
      returnType: void
      params: {}
net.corda.v5.ledger.obsolete.transactions.TransactionUtilsKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getRequiredContractClassName:
      annotations:
        - Nullable
      default: false
      type: public static final
      returnType: String
      params: {}
    requireNotNullContractClassName:
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: String
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
  fields:
    MAX_NUMBER_OF_KEYS_IN_SIGNATURE_CONSTRAINT:
      annotation: []
      type: public static final int
      initialised value: 20
net.corda.v5.ledger.obsolete.transactions.TransactionWithSignatures:
  annotations:
    - DoNotImplement
  type: public interface
  extends: []
  interface: true
  methods:
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getKeyDescriptions:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<String>
      params:
        keys:
          annotation:
            - NotNull
          type: java.util.Set<? extends java.security.PublicKey>
    getMissingSigningKeys:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.Set<java.security.PublicKey>
    getRequiredSigningKeys:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.Set<java.security.PublicKey>
    getSigs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.application.crypto.DigitalSignatureAndMetadata>
net.corda.v5.ledger.obsolete.transactions.TraversableTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.transactions.CoreTransaction
  interface: true
  methods:
    asContractState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        output:
          annotation:
            - Nullable
          type: Object
    checkBaseInvariants:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    filterOutRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    getAttachments:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    getAvailableComponentGroups:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<java.util.List<Object>>
    getCommands:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<?>>
    getCommandsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getComponentGroups:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.transactions.ComponentGroup>
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getInputsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getMembershipParametersHash:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getOutputStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractStateData<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getOutputsData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateInfo>
    getPackages:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies>
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getReferencesMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getTimeWindow:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
    getTransactionDigestAlgorithmNames:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNames
    getTransactionParameters:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.List<kotlin.Pair<String, String>>"
    outRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
    outRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
net.corda.v5.ledger.obsolete.transactions.WireTransaction:
  annotations:
    - DoNotImplement
  type: public interface
  extends:
    - net.corda.v5.ledger.obsolete.transactions.TraversableTransaction
  interface: true
  methods:
    asContractState:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        output:
          annotation:
            - Nullable
          type: Object
    buildFilteredTransaction:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.FilteredTransaction
      params:
        filtering:
          annotation:
            - NotNull
          type: java.util.function.Predicate<Object>
    checkBaseInvariants:
      annotations: []
      default: false
      type: public abstract
      returnType: void
    checkSignature:
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        signatureVerifier:
          annotation:
            - NotNull
          type: net.corda.v5.application.crypto.DigitalSignatureVerificationService
        sig:
          annotation:
            - NotNull
          type: net.corda.v5.application.crypto.DigitalSignatureAndMetadata
    filterOutRefs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    filterOutputs:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    findOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: T
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
        predicate:
          annotation:
            - NotNull
          type: java.util.function.Predicate<T>
    getAttachments:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    getAvailableComponentGroups:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<java.util.List<Object>>
    getAvailableComponentHashes:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.Map<Integer, java.util.List<net.corda.v5.crypto.SecureHash>>"
    getAvailableComponentNonces:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.Map<Integer, java.util.List<net.corda.v5.crypto.SecureHash>>"
    getCommands:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.Command<?>>
    getCommandsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getComponentGroups:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.transactions.ComponentGroup>
    getGroupHashes:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.crypto.SecureHash>
    getGroupsMerkleRoots:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.Map<Integer, net.corda.v5.crypto.SecureHash>"
    getId:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getInputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getInputsMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getMembershipParametersHash:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.crypto.SecureHash
    getMerkleTree:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.merkle.MerkleTree
    getNotary:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.identity.Party
    getOutput:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.ContractState
      params:
        index:
          annotation: []
          type: int
    getOutputStates:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractState>
    getOutputs:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ContractStateData<net.corda.v5.ledger.obsolete.contracts.ContractState>>
    getOutputsData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateInfo>
    getPackages:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.PackageIdWithDependencies>
    getPrivacySalt:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.transactions.PrivacySalt
    getReferences:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateRef>
    getReferencesMetaData:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.ClassInfo>
    getRequiredSigningKeys:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.Set<java.security.PublicKey>
    getTimeWindow:
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.contracts.TimeWindow
    getTransactionDigestAlgorithmNames:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.v5.ledger.obsolete.crypto.TransactionDigestAlgorithmNames
    getTransactionParameters:
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.List<kotlin.Pair<String, String>>"
    outRef:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.v5.ledger.obsolete.contracts.ContractState
    outRefsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<net.corda.v5.ledger.obsolete.contracts.StateAndRef<T>>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
    outputsOfType:
      annotations:
        - NotNull
      default: true
      type: public
      returnType: java.util.List<T>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<T>
